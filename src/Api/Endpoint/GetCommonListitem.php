<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Concur\Api\Endpoint;

class GetCommonListitem extends \Jane\OpenApiRuntime\Client\BaseEndpoint implements \Jane\OpenApiRuntime\Client\Psr7Endpoint
{
    /**
     * Returns all list items based on the search criteria.
     *
     * @param array $queryParameters {
     *
     *     @var int $limit The number of records to return. The default is 25 and the maximum is 100.
     *     @var string $offset The start of the page offset. The default is from the beginning.
     *     @var string $listId the unique identifier for the list this item is a member of
     *     @var string $name The name of the list item. Maximum length: 64.
     *     @var string $parentId The unique identifier of this item's parent. Empty when there is no parent.
     *     @var string $level1Code The item code for the first level of the list. All lists have at least a Level1Code. Maximum 32 characters
     *     @var string $level2Code The item code for the second level of the list. Empty when this level doesn't exist in the list. Maximum 32 characters
     *     @var string $level3Code The item code for the third level of the list. Empty when this level doesn't exist in the list. Maximum 32 characters
     *     @var string $level4Code The item code for the fourth level of the list. Empty when this level doesn't exist in the list. Maximum 32 characters
     *     @var string $level5Code The item code for the fifth level of the list. Empty when this level doesn't exist in the list. Maximum 32 characters
     *     @var string $level6Code The item code for the sixth level of the list. Empty when this level doesn't exist in the list. Maximum 32 characters
     *     @var string $level7Code The item code for the seventh level of the list. Empty when this level doesn't exist in the list. Maximum 32 characters
     *     @var string $level8Code The item code for the eighth level of the list. Empty when this level doesn't exist in the list. Maximum 32 characters
     *     @var string $level9Code The item code for the ninth level of the list. Empty when this level doesn't exist in the list. Maximum 32 characters
     *     @var string $level10Code The item code for the tenth level of the list. Empty when this level doesn't exist in the list. Maximum 32 characters
     * }
     */
    public function __construct(array $queryParameters = [])
    {
        $this->queryParameters = $queryParameters;
    }

    use \Jane\OpenApiRuntime\Client\Psr7EndpointTrait;

    public function getMethod(): string
    {
        return 'GET';
    }

    public function getUri(): string
    {
        return '/common/listitems';
    }

    public function getBody(\Symfony\Component\Serializer\SerializerInterface $serializer, $streamFactory = null): array
    {
        return [[], null];
    }

    public function getExtraHeaders(): array
    {
        return ['Accept' => ['application/json']];
    }

    protected function getQueryOptionsResolver(): \Symfony\Component\OptionsResolver\OptionsResolver
    {
        $optionsResolver = parent::getQueryOptionsResolver();
        $optionsResolver->setDefined(['limit', 'offset', 'listId', 'name', 'parentId', 'level1Code', 'level2Code', 'level3Code', 'level4Code', 'level5Code', 'level6Code', 'level7Code', 'level8Code', 'level9Code', 'level10Code']);
        $optionsResolver->setRequired([]);
        $optionsResolver->setDefaults([]);
        $optionsResolver->setAllowedTypes('limit', ['int']);
        $optionsResolver->setAllowedTypes('offset', ['string']);
        $optionsResolver->setAllowedTypes('listId', ['string']);
        $optionsResolver->setAllowedTypes('name', ['string']);
        $optionsResolver->setAllowedTypes('parentId', ['string']);
        $optionsResolver->setAllowedTypes('level1Code', ['string']);
        $optionsResolver->setAllowedTypes('level2Code', ['string']);
        $optionsResolver->setAllowedTypes('level3Code', ['string']);
        $optionsResolver->setAllowedTypes('level4Code', ['string']);
        $optionsResolver->setAllowedTypes('level5Code', ['string']);
        $optionsResolver->setAllowedTypes('level6Code', ['string']);
        $optionsResolver->setAllowedTypes('level7Code', ['string']);
        $optionsResolver->setAllowedTypes('level8Code', ['string']);
        $optionsResolver->setAllowedTypes('level9Code', ['string']);
        $optionsResolver->setAllowedTypes('level10Code', ['string']);

        return $optionsResolver;
    }

    /**
     * {@inheritdoc}
     *
     * @return \Concur\Api\Model\ListItemGetCollection|null
     */
    protected function transformResponseBody(string $body, int $status, \Symfony\Component\Serializer\SerializerInterface $serializer, ?string $contentType = null)
    {
        if (200 === $status && mb_strpos($contentType, 'application/json') !== false) {
            return $serializer->deserialize($body, 'Concur\\Api\\Model\\ListItemGetCollection', 'json');
        }
    }
}
