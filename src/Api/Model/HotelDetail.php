<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Concur\Api\Model;

class HotelDetail
{
    /**
     * The sum of the room rate for each night stayed, divided by the number of nights stayed. Range: -922,337,203,685,477 to 922,337,203,685,477.
     *
     * @var float
     */
    protected $averageDailyRoomRate;
    /**
     * The check-in date and time. Format: YYYY-MM-DDThh:mm.
     *
     * @var \DateTime
     */
    protected $checkinDateTime;
    /**
     * The check-out date and time. Format: YYYY-MM-DDThh:mm.
     *
     * @var \DateTime
     */
    protected $checkoutDateTime;
    /**
     * The confirmation number for the booking. Maximum length: 32 characters.
     *
     * @var string
     */
    protected $confirmationNumber;
    /**
     * The Guest Name Record (GNR) for the stay. Maximum length: 20 characters.
     *
     * @var string
     */
    protected $gNR;
    /**
     * @var LineItem
     */
    protected $lineItems;
    /**
     * The number of people for this stay.
     *
     * @var int
     */
    protected $numberInParty;
    /**
     * The rate plan type that is used to calculate the room rate. Possible values are rate plan types defined using hospitality industry standards. Maximum length: 50 characters.
     *
     * @var string
     */
    protected $ratePlanType;
    /**
     * The room number for the stay. Maximum length: 15 characters.
     *
     * @var string
     */
    protected $roomNumber;
    /**
     * The type of room. Possible values are room types defined using hospitality industry standards, such as Single, Double, Suite, and so on. Maximum length: 50 characters.
     *
     * @var string
     */
    protected $roomType;

    /**
     * The sum of the room rate for each night stayed, divided by the number of nights stayed. Range: -922,337,203,685,477 to 922,337,203,685,477.
     */
    public function getAverageDailyRoomRate(): float
    {
        return $this->averageDailyRoomRate;
    }

    /**
     * The sum of the room rate for each night stayed, divided by the number of nights stayed. Range: -922,337,203,685,477 to 922,337,203,685,477.
     */
    public function setAverageDailyRoomRate(float $averageDailyRoomRate): self
    {
        $this->averageDailyRoomRate = $averageDailyRoomRate;

        return $this;
    }

    /**
     * The check-in date and time. Format: YYYY-MM-DDThh:mm.
     */
    public function getCheckinDateTime(): \DateTime
    {
        return $this->checkinDateTime;
    }

    /**
     * The check-in date and time. Format: YYYY-MM-DDThh:mm.
     */
    public function setCheckinDateTime(\DateTime $checkinDateTime): self
    {
        $this->checkinDateTime = $checkinDateTime;

        return $this;
    }

    /**
     * The check-out date and time. Format: YYYY-MM-DDThh:mm.
     */
    public function getCheckoutDateTime(): \DateTime
    {
        return $this->checkoutDateTime;
    }

    /**
     * The check-out date and time. Format: YYYY-MM-DDThh:mm.
     */
    public function setCheckoutDateTime(\DateTime $checkoutDateTime): self
    {
        $this->checkoutDateTime = $checkoutDateTime;

        return $this;
    }

    /**
     * The confirmation number for the booking. Maximum length: 32 characters.
     */
    public function getConfirmationNumber(): string
    {
        return $this->confirmationNumber;
    }

    /**
     * The confirmation number for the booking. Maximum length: 32 characters.
     */
    public function setConfirmationNumber(string $confirmationNumber): self
    {
        $this->confirmationNumber = $confirmationNumber;

        return $this;
    }

    /**
     * The Guest Name Record (GNR) for the stay. Maximum length: 20 characters.
     */
    public function getGNR(): string
    {
        return $this->gNR;
    }

    /**
     * The Guest Name Record (GNR) for the stay. Maximum length: 20 characters.
     */
    public function setGNR(string $gNR): self
    {
        $this->gNR = $gNR;

        return $this;
    }

    public function getLineItems(): LineItem
    {
        return $this->lineItems;
    }

    public function setLineItems(LineItem $lineItems): self
    {
        $this->lineItems = $lineItems;

        return $this;
    }

    /**
     * The number of people for this stay.
     */
    public function getNumberInParty(): int
    {
        return $this->numberInParty;
    }

    /**
     * The number of people for this stay.
     */
    public function setNumberInParty(int $numberInParty): self
    {
        $this->numberInParty = $numberInParty;

        return $this;
    }

    /**
     * The rate plan type that is used to calculate the room rate. Possible values are rate plan types defined using hospitality industry standards. Maximum length: 50 characters.
     */
    public function getRatePlanType(): string
    {
        return $this->ratePlanType;
    }

    /**
     * The rate plan type that is used to calculate the room rate. Possible values are rate plan types defined using hospitality industry standards. Maximum length: 50 characters.
     */
    public function setRatePlanType(string $ratePlanType): self
    {
        $this->ratePlanType = $ratePlanType;

        return $this;
    }

    /**
     * The room number for the stay. Maximum length: 15 characters.
     */
    public function getRoomNumber(): string
    {
        return $this->roomNumber;
    }

    /**
     * The room number for the stay. Maximum length: 15 characters.
     */
    public function setRoomNumber(string $roomNumber): self
    {
        $this->roomNumber = $roomNumber;

        return $this;
    }

    /**
     * The type of room. Possible values are room types defined using hospitality industry standards, such as Single, Double, Suite, and so on. Maximum length: 50 characters.
     */
    public function getRoomType(): string
    {
        return $this->roomType;
    }

    /**
     * The type of room. Possible values are room types defined using hospitality industry standards, such as Single, Double, Suite, and so on. Maximum length: 50 characters.
     */
    public function setRoomType(string $roomType): self
    {
        $this->roomType = $roomType;

        return $this;
    }
}
