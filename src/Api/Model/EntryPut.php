<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Concur\Api\Model;

class EntryPut
{
    /**
     * A comment that describes the expense entry. Maximum length: 500 characters.
     *
     * @var string
     */
    protected $comment;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom1;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom10;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom11;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom12;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom13;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom14;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom15;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom16;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom17;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom18;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom19;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom2;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom20;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom21;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom22;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom23;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom24;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom25;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom26;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom27;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom28;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom29;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom3;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom30;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom31;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom32;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom33;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom34;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom35;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom36;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom37;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom38;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom39;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom4;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom40;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom5;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom6;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom7;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom8;
    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $custom9;
    /**
     * The description of the expense. Maximum length: 64 characters.
     *
     * @var string
     */
    protected $description;
    /**
     * The currency conversion rate that converts the transaction amount that is in the transaction currency into the posted amount that is in the report currency. This element is typically not provided. If this element is empty for transactions in a currency different than the user's reimbursement currency, Expense will use the company's configured exchange rates to determine the posted amount for the transaction. If the system is not able to determine the exchange rate, a value of 1.0 will be used.
     *
     * @var float
     */
    protected $exchangeRate;
    /**
     * The code for the expense type.
     *
     * @var string
     */
    protected $expenseTypeCode;
    /**
     * Indicates whether the expense is billable. Format: true or false.
     *
     * @var bool
     */
    protected $isBillable;
    /**
     * Indicates whether the expense is personal (that is, non-reimbursable). Format: true or false.
     *
     * @var bool
     */
    protected $isPersonal;
    /**
     * @var Journey
     */
    protected $journey;
    /**
     * The unique identifier for the location where the expense was incurred.
     *
     * @var string
     */
    protected $locationID;
    /**
     * The details from the Org Unit fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $orgUnit1;
    /**
     * The details from the Org Unit fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $orgUnit2;
    /**
     * The details from the Org Unit fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $orgUnit3;
    /**
     * The details from the Org Unit fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $orgUnit4;
    /**
     * The details from the Org Unit fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $orgUnit5;
    /**
     * The details from the Org Unit fields. These fields may not have data, depending on the configuration.
     *
     * @var string
     */
    protected $orgUnit6;
    /**
     * The ID of the payment type for the entry.  For mileage expenses, use the Cash payment type. For expense types with an expense code that uses a transaction amount instead of a distance, this element is required. This element should not be used for expense types with an expense code for Company Car or Personal Car, because these two expense codes always use the Cash payment type.
     *
     * @var string
     */
    protected $paymentTypeID;
    /**
     * The report ID of the report where the entry will be added.
     *
     * @var string
     */
    protected $reportID;
    /**
     * The receipt type for this entry. Supported values: T - tax receipt, R - regular receipt, N - no receipt.
     *
     * @var string
     */
    protected $taxReceiptType;
    /**
     * The amount of the expense entry, in the transaction currency paid to the vendor. For expense types with an expense code that uses a transaction amount instead of a distance, this element is required. This element should not be used for expense types with an expense code for Company Car or Personal Car, because these two expense codes use a distance instead of a transaction amount.
     *
     * @var float
     */
    protected $transactionAmount;
    /**
     * The 3-letter ISO 4217 currency code for the expense entry transaction amount. This is the currency in which the vendor was paid. For expense types with an expense code that uses a transaction amount instead of a distance, this element is required. This element should not be used for expense types with an expense code for Company Car or Personal Car, because for these two expense codes the currency is always the Report Currency.
     *
     * @var string
     */
    protected $transactionCurrencyCode;
    /**
     * The date when the good or service associated with this expense entry was provided. Format: YYYY-MM-DD.
     *
     * @var \DateTime
     */
    protected $transactionDate;
    /**
     * The name of the vendor for the expense entry. Maximum length: 64 characters.
     *
     * @var string
     */
    protected $vendorDescription;
    /**
     * The unique identifier for a vendor list item.
     *
     * @var string
     */
    protected $vendorListItemID;

    /**
     * A comment that describes the expense entry. Maximum length: 500 characters.
     */
    public function getComment(): string
    {
        return $this->comment;
    }

    /**
     * A comment that describes the expense entry. Maximum length: 500 characters.
     */
    public function setComment(string $comment): self
    {
        $this->comment = $comment;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom1(): string
    {
        return $this->custom1;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom1(string $custom1): self
    {
        $this->custom1 = $custom1;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom10(): string
    {
        return $this->custom10;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom10(string $custom10): self
    {
        $this->custom10 = $custom10;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom11(): string
    {
        return $this->custom11;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom11(string $custom11): self
    {
        $this->custom11 = $custom11;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom12(): string
    {
        return $this->custom12;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom12(string $custom12): self
    {
        $this->custom12 = $custom12;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom13(): string
    {
        return $this->custom13;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom13(string $custom13): self
    {
        $this->custom13 = $custom13;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom14(): string
    {
        return $this->custom14;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom14(string $custom14): self
    {
        $this->custom14 = $custom14;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom15(): string
    {
        return $this->custom15;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom15(string $custom15): self
    {
        $this->custom15 = $custom15;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom16(): string
    {
        return $this->custom16;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom16(string $custom16): self
    {
        $this->custom16 = $custom16;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom17(): string
    {
        return $this->custom17;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom17(string $custom17): self
    {
        $this->custom17 = $custom17;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom18(): string
    {
        return $this->custom18;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom18(string $custom18): self
    {
        $this->custom18 = $custom18;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom19(): string
    {
        return $this->custom19;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom19(string $custom19): self
    {
        $this->custom19 = $custom19;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom2(): string
    {
        return $this->custom2;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom2(string $custom2): self
    {
        $this->custom2 = $custom2;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom20(): string
    {
        return $this->custom20;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom20(string $custom20): self
    {
        $this->custom20 = $custom20;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom21(): string
    {
        return $this->custom21;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom21(string $custom21): self
    {
        $this->custom21 = $custom21;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom22(): string
    {
        return $this->custom22;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom22(string $custom22): self
    {
        $this->custom22 = $custom22;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom23(): string
    {
        return $this->custom23;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom23(string $custom23): self
    {
        $this->custom23 = $custom23;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom24(): string
    {
        return $this->custom24;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom24(string $custom24): self
    {
        $this->custom24 = $custom24;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom25(): string
    {
        return $this->custom25;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom25(string $custom25): self
    {
        $this->custom25 = $custom25;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom26(): string
    {
        return $this->custom26;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom26(string $custom26): self
    {
        $this->custom26 = $custom26;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom27(): string
    {
        return $this->custom27;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom27(string $custom27): self
    {
        $this->custom27 = $custom27;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom28(): string
    {
        return $this->custom28;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom28(string $custom28): self
    {
        $this->custom28 = $custom28;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom29(): string
    {
        return $this->custom29;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom29(string $custom29): self
    {
        $this->custom29 = $custom29;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom3(): string
    {
        return $this->custom3;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom3(string $custom3): self
    {
        $this->custom3 = $custom3;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom30(): string
    {
        return $this->custom30;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom30(string $custom30): self
    {
        $this->custom30 = $custom30;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom31(): string
    {
        return $this->custom31;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom31(string $custom31): self
    {
        $this->custom31 = $custom31;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom32(): string
    {
        return $this->custom32;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom32(string $custom32): self
    {
        $this->custom32 = $custom32;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom33(): string
    {
        return $this->custom33;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom33(string $custom33): self
    {
        $this->custom33 = $custom33;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom34(): string
    {
        return $this->custom34;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom34(string $custom34): self
    {
        $this->custom34 = $custom34;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom35(): string
    {
        return $this->custom35;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom35(string $custom35): self
    {
        $this->custom35 = $custom35;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom36(): string
    {
        return $this->custom36;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom36(string $custom36): self
    {
        $this->custom36 = $custom36;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom37(): string
    {
        return $this->custom37;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom37(string $custom37): self
    {
        $this->custom37 = $custom37;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom38(): string
    {
        return $this->custom38;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom38(string $custom38): self
    {
        $this->custom38 = $custom38;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom39(): string
    {
        return $this->custom39;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom39(string $custom39): self
    {
        $this->custom39 = $custom39;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom4(): string
    {
        return $this->custom4;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom4(string $custom4): self
    {
        $this->custom4 = $custom4;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom40(): string
    {
        return $this->custom40;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom40(string $custom40): self
    {
        $this->custom40 = $custom40;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom5(): string
    {
        return $this->custom5;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom5(string $custom5): self
    {
        $this->custom5 = $custom5;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom6(): string
    {
        return $this->custom6;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom6(string $custom6): self
    {
        $this->custom6 = $custom6;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom7(): string
    {
        return $this->custom7;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom7(string $custom7): self
    {
        $this->custom7 = $custom7;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom8(): string
    {
        return $this->custom8;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom8(string $custom8): self
    {
        $this->custom8 = $custom8;

        return $this;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function getCustom9(): string
    {
        return $this->custom9;
    }

    /**
     * The details from the Custom fields. These fields may not have data, depending on the configuration.
     */
    public function setCustom9(string $custom9): self
    {
        $this->custom9 = $custom9;

        return $this;
    }

    /**
     * The description of the expense. Maximum length: 64 characters.
     */
    public function getDescription(): string
    {
        return $this->description;
    }

    /**
     * The description of the expense. Maximum length: 64 characters.
     */
    public function setDescription(string $description): self
    {
        $this->description = $description;

        return $this;
    }

    /**
     * The currency conversion rate that converts the transaction amount that is in the transaction currency into the posted amount that is in the report currency. This element is typically not provided. If this element is empty for transactions in a currency different than the user's reimbursement currency, Expense will use the company's configured exchange rates to determine the posted amount for the transaction. If the system is not able to determine the exchange rate, a value of 1.0 will be used.
     */
    public function getExchangeRate(): float
    {
        return $this->exchangeRate;
    }

    /**
     * The currency conversion rate that converts the transaction amount that is in the transaction currency into the posted amount that is in the report currency. This element is typically not provided. If this element is empty for transactions in a currency different than the user's reimbursement currency, Expense will use the company's configured exchange rates to determine the posted amount for the transaction. If the system is not able to determine the exchange rate, a value of 1.0 will be used.
     */
    public function setExchangeRate(float $exchangeRate): self
    {
        $this->exchangeRate = $exchangeRate;

        return $this;
    }

    /**
     * The code for the expense type.
     */
    public function getExpenseTypeCode(): string
    {
        return $this->expenseTypeCode;
    }

    /**
     * The code for the expense type.
     */
    public function setExpenseTypeCode(string $expenseTypeCode): self
    {
        $this->expenseTypeCode = $expenseTypeCode;

        return $this;
    }

    /**
     * Indicates whether the expense is billable. Format: true or false.
     */
    public function getIsBillable(): bool
    {
        return $this->isBillable;
    }

    /**
     * Indicates whether the expense is billable. Format: true or false.
     */
    public function setIsBillable(bool $isBillable): self
    {
        $this->isBillable = $isBillable;

        return $this;
    }

    /**
     * Indicates whether the expense is personal (that is, non-reimbursable). Format: true or false.
     */
    public function getIsPersonal(): bool
    {
        return $this->isPersonal;
    }

    /**
     * Indicates whether the expense is personal (that is, non-reimbursable). Format: true or false.
     */
    public function setIsPersonal(bool $isPersonal): self
    {
        $this->isPersonal = $isPersonal;

        return $this;
    }

    public function getJourney(): Journey
    {
        return $this->journey;
    }

    public function setJourney(Journey $journey): self
    {
        $this->journey = $journey;

        return $this;
    }

    /**
     * The unique identifier for the location where the expense was incurred.
     */
    public function getLocationID(): string
    {
        return $this->locationID;
    }

    /**
     * The unique identifier for the location where the expense was incurred.
     */
    public function setLocationID(string $locationID): self
    {
        $this->locationID = $locationID;

        return $this;
    }

    /**
     * The details from the Org Unit fields. These fields may not have data, depending on the configuration.
     */
    public function getOrgUnit1(): string
    {
        return $this->orgUnit1;
    }

    /**
     * The details from the Org Unit fields. These fields may not have data, depending on the configuration.
     */
    public function setOrgUnit1(string $orgUnit1): self
    {
        $this->orgUnit1 = $orgUnit1;

        return $this;
    }

    /**
     * The details from the Org Unit fields. These fields may not have data, depending on the configuration.
     */
    public function getOrgUnit2(): string
    {
        return $this->orgUnit2;
    }

    /**
     * The details from the Org Unit fields. These fields may not have data, depending on the configuration.
     */
    public function setOrgUnit2(string $orgUnit2): self
    {
        $this->orgUnit2 = $orgUnit2;

        return $this;
    }

    /**
     * The details from the Org Unit fields. These fields may not have data, depending on the configuration.
     */
    public function getOrgUnit3(): string
    {
        return $this->orgUnit3;
    }

    /**
     * The details from the Org Unit fields. These fields may not have data, depending on the configuration.
     */
    public function setOrgUnit3(string $orgUnit3): self
    {
        $this->orgUnit3 = $orgUnit3;

        return $this;
    }

    /**
     * The details from the Org Unit fields. These fields may not have data, depending on the configuration.
     */
    public function getOrgUnit4(): string
    {
        return $this->orgUnit4;
    }

    /**
     * The details from the Org Unit fields. These fields may not have data, depending on the configuration.
     */
    public function setOrgUnit4(string $orgUnit4): self
    {
        $this->orgUnit4 = $orgUnit4;

        return $this;
    }

    /**
     * The details from the Org Unit fields. These fields may not have data, depending on the configuration.
     */
    public function getOrgUnit5(): string
    {
        return $this->orgUnit5;
    }

    /**
     * The details from the Org Unit fields. These fields may not have data, depending on the configuration.
     */
    public function setOrgUnit5(string $orgUnit5): self
    {
        $this->orgUnit5 = $orgUnit5;

        return $this;
    }

    /**
     * The details from the Org Unit fields. These fields may not have data, depending on the configuration.
     */
    public function getOrgUnit6(): string
    {
        return $this->orgUnit6;
    }

    /**
     * The details from the Org Unit fields. These fields may not have data, depending on the configuration.
     */
    public function setOrgUnit6(string $orgUnit6): self
    {
        $this->orgUnit6 = $orgUnit6;

        return $this;
    }

    /**
     * The ID of the payment type for the entry.  For mileage expenses, use the Cash payment type. For expense types with an expense code that uses a transaction amount instead of a distance, this element is required. This element should not be used for expense types with an expense code for Company Car or Personal Car, because these two expense codes always use the Cash payment type.
     */
    public function getPaymentTypeID(): string
    {
        return $this->paymentTypeID;
    }

    /**
     * The ID of the payment type for the entry.  For mileage expenses, use the Cash payment type. For expense types with an expense code that uses a transaction amount instead of a distance, this element is required. This element should not be used for expense types with an expense code for Company Car or Personal Car, because these two expense codes always use the Cash payment type.
     */
    public function setPaymentTypeID(string $paymentTypeID): self
    {
        $this->paymentTypeID = $paymentTypeID;

        return $this;
    }

    /**
     * The report ID of the report where the entry will be added.
     */
    public function getReportID(): string
    {
        return $this->reportID;
    }

    /**
     * The report ID of the report where the entry will be added.
     */
    public function setReportID(string $reportID): self
    {
        $this->reportID = $reportID;

        return $this;
    }

    /**
     * The receipt type for this entry. Supported values: T - tax receipt, R - regular receipt, N - no receipt.
     */
    public function getTaxReceiptType(): string
    {
        return $this->taxReceiptType;
    }

    /**
     * The receipt type for this entry. Supported values: T - tax receipt, R - regular receipt, N - no receipt.
     */
    public function setTaxReceiptType(string $taxReceiptType): self
    {
        $this->taxReceiptType = $taxReceiptType;

        return $this;
    }

    /**
     * The amount of the expense entry, in the transaction currency paid to the vendor. For expense types with an expense code that uses a transaction amount instead of a distance, this element is required. This element should not be used for expense types with an expense code for Company Car or Personal Car, because these two expense codes use a distance instead of a transaction amount.
     */
    public function getTransactionAmount(): float
    {
        return $this->transactionAmount;
    }

    /**
     * The amount of the expense entry, in the transaction currency paid to the vendor. For expense types with an expense code that uses a transaction amount instead of a distance, this element is required. This element should not be used for expense types with an expense code for Company Car or Personal Car, because these two expense codes use a distance instead of a transaction amount.
     */
    public function setTransactionAmount(float $transactionAmount): self
    {
        $this->transactionAmount = $transactionAmount;

        return $this;
    }

    /**
     * The 3-letter ISO 4217 currency code for the expense entry transaction amount. This is the currency in which the vendor was paid. For expense types with an expense code that uses a transaction amount instead of a distance, this element is required. This element should not be used for expense types with an expense code for Company Car or Personal Car, because for these two expense codes the currency is always the Report Currency.
     */
    public function getTransactionCurrencyCode(): string
    {
        return $this->transactionCurrencyCode;
    }

    /**
     * The 3-letter ISO 4217 currency code for the expense entry transaction amount. This is the currency in which the vendor was paid. For expense types with an expense code that uses a transaction amount instead of a distance, this element is required. This element should not be used for expense types with an expense code for Company Car or Personal Car, because for these two expense codes the currency is always the Report Currency.
     */
    public function setTransactionCurrencyCode(string $transactionCurrencyCode): self
    {
        $this->transactionCurrencyCode = $transactionCurrencyCode;

        return $this;
    }

    /**
     * The date when the good or service associated with this expense entry was provided. Format: YYYY-MM-DD.
     */
    public function getTransactionDate(): \DateTime
    {
        return $this->transactionDate;
    }

    /**
     * The date when the good or service associated with this expense entry was provided. Format: YYYY-MM-DD.
     */
    public function setTransactionDate(\DateTime $transactionDate): self
    {
        $this->transactionDate = $transactionDate;

        return $this;
    }

    /**
     * The name of the vendor for the expense entry. Maximum length: 64 characters.
     */
    public function getVendorDescription(): string
    {
        return $this->vendorDescription;
    }

    /**
     * The name of the vendor for the expense entry. Maximum length: 64 characters.
     */
    public function setVendorDescription(string $vendorDescription): self
    {
        $this->vendorDescription = $vendorDescription;

        return $this;
    }

    /**
     * The unique identifier for a vendor list item.
     */
    public function getVendorListItemID(): string
    {
        return $this->vendorListItemID;
    }

    /**
     * The unique identifier for a vendor list item.
     */
    public function setVendorListItemID(string $vendorListItemID): self
    {
        $this->vendorListItemID = $vendorListItemID;

        return $this;
    }
}
