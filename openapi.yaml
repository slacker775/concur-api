openapi: 3.0.2
info:
  title: Users
  description: Provides details of all the client's SAP Concur users that meet the
    search parameters.
  version: "3.0"
servers:
- url: https://www.concursolutions.com/api/v3.0
security:
- OAuth2: []
tags:
- name: Resources
paths:
  /expense/reports:
    get:
      tags:
      - Resources
      summary: Gets all reports
      description: Returns all reports owned by the user based on the search criteria.
      parameters:
      - name: offset
        in: query
        description: Starting page offset
        schema:
          type: string
      - name: limit
        in: query
        description: Number of records to return (default 25)
        schema:
          type: integer
          format: int32
      - name: user
        in: query
        description: Optional. The login ID of the report owner(s) to use when searching
          for reports. If the value is set to LoginID, reports for the report owner
          with this login ID value are returned. If the value is set to ALL, reports
          for all report owners are returned. If this parameter is not specified,
          reports for the OAuth Consumer are returned. The access token owner (OAuth
          Consumer) must have the Web Services Admin role to use this parameter.
        schema:
          type: string
      - name: approvalStatusCode
        in: query
        description: 'The status code for the Approval Status. The values can include
          Concur Expense standard codes or custom codes. The Concur Expense standard
          code values are: A_AAFH - Report submission triggered an anomaly and fraud
          check; A_ACCO - Report is pending reviews; A_APPR - Report has been approved;
          A_EXTV - Report is pending external validation; A_FILE - Report has been
          submitted; A_NOTF - Report has not been submitted; A_PBDG - Report approval
          is pending Budget approval; A_PECO - Report approval is pending Cost object
          approval; A_PEND - Report is pending manager approval; A_PVAL - Report is
          pending prepayment validation; A_RESU - Report needs to be resubmitted;
          A_RHLD - Report submission is pending receipt images; A_TEXP - Report expired
          in approval queue. For custom codes, contact Concur Developer Support.'
        schema:
          type: string
      - name: paymentStatusCode
        in: query
        description: 'The payment status code for the report. The values can include
          Concur Expense standard codes or custom codes. The Concur Expense standard
          code values are: P_HOLD - Report payment is on hold; P_NOTP - Report has
          not been paid; P_PAID - Report has been paid; P_PAYC - Payment is confirmed.
          Some or all of the report expenses have been paid; P_PROC - Report is in
          process to be paid. For custom codes, contact Concur Developer Support.'
        schema:
          type: string
      - name: currencyCode
        in: query
        description: 'The 3-letter ISO 4217 currency code for the report currency.
          Example: USD.'
        schema:
          type: string
      - name: paymentType
        in: query
        description: The unique identifier for the payment type that is the payment
          type for at least one expense entry in the report. Use PaymentTypeID from
          the "GET Expense Group Configurations" function.
        schema:
          type: string
      - name: reimbursementMethod
        in: query
        description: 'The method the report owner will be reimbursed. VALUES: ADPPAYR
          - ADP Payroll; APCHECK - AP (Company Check); CNQRPAY - Expense Pay; PMTSERV
          - Other Payment Service. NOTE: PAY_PAL is NOT supported.'
        schema:
          type: string
      - name: approverLoginID
        in: query
        description: The login ID for the report approver that is the current approver
          assigned to the report.
        schema:
          type: string
      - name: expenseTypeCode
        in: query
        description: The expense type code that is the expense type for at least one
          expense entry in the report. Use ExpenseTypeCode from the "GET Expense Group
          Configurations" function.
        schema:
          type: string
      - name: attendeeTypeCode
        in: query
        description: The report contains expense entries that have attendees of the
          specified type.
        schema:
          type: string
      - name: countryCode
        in: query
        description: 'The report country. Maximum 2 characters. Format: The ISO 3166-1
          alpha-2 country code. Example: United States is US.'
        schema:
          type: string
      - name: batchID
        in: query
        description: The unique identifier for a payment batch where there is at least
          one report payee within the report. Use the BatchID from the "GET Payment
          Batch List" function.
        schema:
          type: string
      - name: vendorName
        in: query
        description: The Vendor Description that is the vendor for at least one expense
          entry in the report.
        schema:
          type: string
      - name: hasVAT
        in: query
        description: 'Determines if the report has at least one expense entry with
          VAT details. Format: true or false.'
        schema:
          type: boolean
      - name: hasImages
        in: query
        description: 'Determines if the report has at least one expense entry with
          an entry image or if there is a report image for this report. Format: true
          or false.'
        schema:
          type: boolean
      - name: hasAttendees
        in: query
        description: 'Determines if the report has at least one expense entry with
          an attendee. Format: true or false.'
        schema:
          type: boolean
      - name: hasBillableExpenses
        in: query
        description: 'The IsBillable flag for at least one expense entry in the report.
          Format: true or false.'
        schema:
          type: boolean
      - name: isTestUser
        in: query
        description: 'The report owner is a test user using the report for testing
          purposes in a non-production envirnment. format: true or false.'
        schema:
          type: boolean
      - name: expenseGroupConfigID
        in: query
        description: The unique identifier for the expense group configuration associated
          to the report's expense group. Use the ID from the "GET Expense Group Configurations"
          function.
        schema:
          type: string
      - name: entryTransactionDateBefore
        in: query
        description: 'The entry transaction date for at least one expense entry in
          the report is before this date.Format: YYYY-MM-DD'
        schema:
          type: string
          format: date-time
      - name: entryTransactionDateAfter
        in: query
        description: 'The entry transaction date for at least one expense entry in
          the report is after this date.Format: YYYY-MM-DD'
        schema:
          type: string
          format: date-time
      - name: createDateBefore
        in: query
        description: 'The report create date is before this date.Format: YYYY-MM-DD'
        schema:
          type: string
          format: date-time
      - name: createDateAfter
        in: query
        description: 'The report create date is after this date.Format: YYYY-MM-DD'
        schema:
          type: string
          format: date-time
      - name: userDefinedDateBefore
        in: query
        description: 'The report user defined date is before this date.Format: YYYY-MM-DD'
        schema:
          type: string
          format: date-time
      - name: userDefinedDateAfter
        in: query
        description: 'The report user defined date is after this date.Format: YYYY-MM-DD'
        schema:
          type: string
          format: date-time
      - name: submitDateBefore
        in: query
        description: 'The report submit date is before this date.Format: YYYY-MM-DD'
        schema:
          type: string
          format: date-time
      - name: submitDateAfter
        in: query
        description: 'The report submit date is after this date.Format: YYYY-MM-DD'
        schema:
          type: string
          format: date-time
      - name: processingPaymentDateBefore
        in: query
        description: 'The report processing payment date is before this date.Format:
          YYYY-MM-DD'
        schema:
          type: string
          format: date-time
      - name: processingPaymentDateAfter
        in: query
        description: 'The report processing payment date is after this date. Format:
          YYYY-MM-DD'
        schema:
          type: string
          format: date-time
      - name: paidDateBefore
        in: query
        description: 'The report paid date is before this date.Format: YYYY-MM-DD'
        schema:
          type: string
          format: date-time
      - name: paidDateAfter
        in: query
        description: 'The report paid date is after this date.Format: YYYY-MM-DD'
        schema:
          type: string
          format: date-time
      - name: modifiedDateBefore
        in: query
        description: 'The report modified date is before this date.Format: YYYY-MM-DD'
        schema:
          type: string
          format: date-time
      - name: modifiedDateAfter
        in: query
        description: 'The report modified date is after this date.Format: YYYY-MM-DD'
        schema:
          type: string
          format: date-time
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportCollection'
            application/xml:
              schema:
                $ref: '#/components/schemas/ReportCollection'
    post:
      tags:
      - Resources
      summary: Create a new report
      description: Create an expense report with the supplied data.
      parameters:
      - name: user
        in: query
        description: Optional. The login ID for the Report Owner.
        schema:
          type: string
      requestBody:
        description: Report object to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/ReportPost'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CreateResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
            application/xml:
              schema:
                $ref: '#/components/schemas/Void'
      x-codegen-request-body-name: content
  /expense/reports/{id}:
    get:
      tags:
      - Resources
      summary: Gets a single report
      description: Returns the specified report.
      parameters:
      - name: id
        in: path
        description: Report ID
        required: true
        schema:
          type: string
      - name: user
        in: query
        description: Optional. The login ID of the report owner(s) to use when searching
          for reports. If the value is set to LoginID, reports for the report owner
          with this login ID value are returned. If the value is set to ALL, reports
          for all report owners are returned. If this parameter is not specified,
          reports for the OAuth Consumer are returned. The access token owner (OAuth
          Consumer) must have the Web Services Admin role to use this parameter.
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportGet'
            application/xml:
              schema:
                $ref: '#/components/schemas/ReportGet'
    put:
      tags:
      - Resources
      summary: Update report
      description: Updates the report specified in the URL. Only the provided fields
        will be updated, missing fields will not be altered.
      parameters:
      - name: id
        in: path
        description: The unique identifier for the report.
        required: true
        schema:
          type: string
      - name: user
        in: query
        description: Optional. The login ID for the Report Owner.
        schema:
          type: string
      requestBody:
        description: The report object to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportPut'
          application/xml:
            schema:
              $ref: '#/components/schemas/ReportPut'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
            application/xml:
              schema:
                $ref: '#/components/schemas/Void'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
            application/xml:
              schema:
                $ref: '#/components/schemas/Void'
      x-codegen-request-body-name: content
  /common/listitems:
    get:
      tags:
      - Resources
      summary: Get all list items
      description: Returns all list items based on the search criteria.
      parameters:
      - name: limit
        in: query
        description: The number of records to return. The default is 25 and the maximum
          is 100.
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: The start of the page offset. The default is from the beginning.
        schema:
          type: string
      - name: listId
        in: query
        description: The unique identifier for the list this item is a member of.
        schema:
          type: string
      - name: name
        in: query
        description: 'The name of the list item. Maximum length: 64.'
        schema:
          type: string
      - name: parentId
        in: query
        description: The unique identifier of this item's parent. Empty when there
          is no parent.
        schema:
          type: string
      - name: level1Code
        in: query
        description: The item code for the first level of the list. All lists have
          at least a Level1Code. Maximum 32 characters
        schema:
          type: string
      - name: level2Code
        in: query
        description: The item code for the second level of the list. Empty when this
          level doesn't exist in the list. Maximum 32 characters
        schema:
          type: string
      - name: level3Code
        in: query
        description: The item code for the third level of the list. Empty when this
          level doesn't exist in the list. Maximum 32 characters
        schema:
          type: string
      - name: level4Code
        in: query
        description: The item code for the fourth level of the list. Empty when this
          level doesn't exist in the list. Maximum 32 characters
        schema:
          type: string
      - name: level5Code
        in: query
        description: The item code for the fifth level of the list. Empty when this
          level doesn't exist in the list. Maximum 32 characters
        schema:
          type: string
      - name: level6Code
        in: query
        description: The item code for the sixth level of the list. Empty when this
          level doesn't exist in the list. Maximum 32 characters
        schema:
          type: string
      - name: level7Code
        in: query
        description: The item code for the seventh level of the list. Empty when this
          level doesn't exist in the list. Maximum 32 characters
        schema:
          type: string
      - name: level8Code
        in: query
        description: The item code for the eighth level of the list. Empty when this
          level doesn't exist in the list. Maximum 32 characters
        schema:
          type: string
      - name: level9Code
        in: query
        description: The item code for the ninth level of the list. Empty when this
          level doesn't exist in the list. Maximum 32 characters
        schema:
          type: string
      - name: level10Code
        in: query
        description: The item code for the tenth level of the list. Empty when this
          level doesn't exist in the list. Maximum 32 characters
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListItemGetCollection'
            application/xml:
              schema:
                $ref: '#/components/schemas/ListItemGetCollection'
    post:
      tags:
      - Resources
      summary: Create a new list item
      description: Creates a new item in the specified list.
      requestBody:
        description: List item object to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListItemPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/ListItemPost'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CreateResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
            application/xml:
              schema:
                $ref: '#/components/schemas/Void'
      x-codegen-request-body-name: content
  /common/listitems/{id}:
    get:
      tags:
      - Resources
      summary: Get a single list item by ID
      description: Returns the specified list item.
      parameters:
      - name: id
        in: path
        description: The unique identifier for the list item.
        required: true
        schema:
          type: string
      - name: listId
        in: query
        description: The unique identifier for the list this item is a member.
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListItemGet'
            application/xml:
              schema:
                $ref: '#/components/schemas/ListItemGet'
    put:
      tags:
      - Resources
      summary: Update list item
      description: Updates the specified list item. Only the provided fields will
        be updated, missing fields will not be altered.
      parameters:
      - name: id
        in: path
        description: The unique identifier for the list item.
        required: true
        schema:
          type: string
      requestBody:
        description: The list item object to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListItemPut'
          application/xml:
            schema:
              $ref: '#/components/schemas/ListItemPut'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
            application/xml:
              schema:
                $ref: '#/components/schemas/Void'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
            application/xml:
              schema:
                $ref: '#/components/schemas/Void'
      x-codegen-request-body-name: content
    delete:
      tags:
      - Resources
      summary: Delete list item by ID
      description: Deletes the specified list item.
      parameters:
      - name: id
        in: path
        description: The unique identifier of the list item to delete
        required: true
        schema:
          type: string
      - name: listId
        in: query
        description: The unique identifier of the list associated with a list item
          to be deleted
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
            application/xml:
              schema:
                $ref: '#/components/schemas/Void'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
            application/xml:
              schema:
                $ref: '#/components/schemas/Void'
  /common/lists:
    get:
      tags:
      - Resources
      summary: Gets all lists
      description: Returns all lists based on the search criteria.
      parameters:
      - name: limit
        in: query
        description: The number of records to return. The default is 25 and the maximum
          is 100.
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: The start of the page offset. The default is from the beginning.
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGetCollection'
            application/xml:
              schema:
                $ref: '#/components/schemas/ListGetCollection'
    post:
      tags:
      - Resources
      summary: Create a new list
      description: Create a new list
      requestBody:
        description: list object to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/ListPost'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CreateResponse'
      x-codegen-request-body-name: content
  /common/lists/{id}:
    get:
      tags:
      - Resources
      summary: Get a single list by ID
      description: Returns a list by ID.
      parameters:
      - name: id
        in: path
        description: The unique identifier for the list.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGet'
            application/xml:
              schema:
                $ref: '#/components/schemas/ListGet'
  /common/users:
    get:
      tags:
      - Resources
      summary: Get all users.
      description: Retrieves all users based on the search criteria.
      parameters:
      - name: offset
        in: query
        description: The starting point of the next set of results, after the limit
          specified in the limit field has been reached.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: 'The number of records to return. Default value: 25. Maximum:
          100.'
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: primaryEmail
        in: query
        description: The primary email of the user.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: employeeID
        in: query
        description: The employee ID of the user.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: user
        in: query
        description: The login ID of the user.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: lastName
        in: query
        description: The last name of the user.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: active
        in: query
        description: 'Indicates whether to return active or inactive users. FORMAT:
          true or false'
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCollection'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserCollection'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Unauthorized'
components:
  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: string
  schemas:
    CreateResponse:
      type: object
      properties:
        ID:
          type: string
        URI:
          type: string
    Void:
      type: object
    CustomField:
      type: object
      properties:
        Code:
          type: string
          description: For list fields, this is the list item code.
        ListItemID:
          type: string
          description: For list fields, this is the list item ID.
        Type:
          type: string
          description: 'The custom field type. Supported values: Amount, Boolean,
            ConnectedList, Date, Integer, List, Number, Text'
        Value:
          type: string
          description: 'The value in the Org Unit or Custom field. For list fields,
            this is the name of the list item.  Maximum length: 48 characters'
    ReportCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/ReportGet'
        NextPage:
          type: string
          nullable: true
          description: The URI of the next page of results, if any.
    ReportGet:
      type: object
      properties:
        AmountDueCompanyCard:
          type: number
          nullable: true
          description: The total amount due to the company card for the report. Maximum
            23 characters.
          format: double
        AmountDueEmployee:
          type: number
          nullable: true
          description: The total amount due to the employee for the report. Maximum
            23 characters.
          format: double
        ApprovalStatusCode:
          type: string
          nullable: true
          description: The approval status code for the report.
        ApprovalStatusName:
          type: string
          nullable: true
          description: The report's approval status, in the OAuth consumer's language.
        ApproverLoginID:
          type: string
          nullable: true
          description: The Login ID of the report owner's expense approver.
        ApproverName:
          type: string
          nullable: true
          description: The name of the report owner's expense approver.
        Country:
          type: string
          nullable: true
          description: 'The report country. Maximum 2 characters. Format: The ISO
            3166-1 alpha-2 country code. Example: United States is US.'
        CountrySubdivision:
          type: string
          nullable: true
          description: 'The report country subdivision.  Format: ISO 3166-2:2007 country
            subdivision.'
        CreateDate:
          oneOf: 
            - type: string
            - type: boolean
          nullable: true
          description: The date the report was created.
          format: date-time
        CurrencyCode:
          type: string
          nullable: true
          description: 'The 3-letter ISO 4217 currency code for the expense report
            currency. Examples: USD - US dollars; BRL - Brazilian real; CAD - Canadian
            dollar; CHF - Swiss franc; EUR - Euro; GBO - Pound sterling; HKD - Hong
            Kong dollar; INR - Indian rupee; MXN - Mexican peso; NOK - Norwegian krone;
            SEK - Swedish krona.'
        Custom1:
          $ref: '#/components/schemas/CustomField'
        Custom10:
          $ref: '#/components/schemas/CustomField'
        Custom11:
          $ref: '#/components/schemas/CustomField'
        Custom12:
          $ref: '#/components/schemas/CustomField'
        Custom13:
          $ref: '#/components/schemas/CustomField'
        Custom14:
          $ref: '#/components/schemas/CustomField'
        Custom15:
          $ref: '#/components/schemas/CustomField'
        Custom16:
          $ref: '#/components/schemas/CustomField'
        Custom17:
          $ref: '#/components/schemas/CustomField'
        Custom18:
          $ref: '#/components/schemas/CustomField'
        Custom19:
          $ref: '#/components/schemas/CustomField'
        Custom2:
          $ref: '#/components/schemas/CustomField'
        Custom20:
          $ref: '#/components/schemas/CustomField'
        Custom3:
          $ref: '#/components/schemas/CustomField'
        Custom4:
          $ref: '#/components/schemas/CustomField'
        Custom5:
          $ref: '#/components/schemas/CustomField'
        Custom6:
          $ref: '#/components/schemas/CustomField'
        Custom7:
          $ref: '#/components/schemas/CustomField'
        Custom8:
          $ref: '#/components/schemas/CustomField'
        Custom9:
          $ref: '#/components/schemas/CustomField'
        EverSentBack:
          type: boolean
          description: 'Whether the report has ever been sent back to the employee.
            Format: Y/N'
        HasException:
          type: boolean
          description: 'Whether the report has exceptions. Format: Y/N '
        ID:
          type: string
          description: The unique identifier of the resource.
        LastComment:
          type: string
          nullable: true
          description: The text of the most recent comment on the report.
        LastModifiedDate:
          type: string
          description: The date the report header was last modified.
          format: date-time
        LedgerName:
          type: string
          nullable: true
          description: The name of the expense report ledger. Maximum 20 characters.
        Name:
          type: string
          nullable: true
          description: The name of the report.
        OrgUnit1:
          $ref: '#/components/schemas/CustomField'
        OrgUnit2:
          $ref: '#/components/schemas/CustomField'
        OrgUnit3:
          $ref: '#/components/schemas/CustomField'
        OrgUnit4:
          $ref: '#/components/schemas/CustomField'
        OrgUnit5:
          $ref: '#/components/schemas/CustomField'
        OrgUnit6:
          $ref: '#/components/schemas/CustomField'
        OwnerLoginID:
          type: string
          nullable: true
          description: The Login ID of the user this report belongs to.
        OwnerName:
          type: string
          nullable: true
          description: The name of the expense report owner.
        PaidDate:
          type: string
          nullable: true
          description: The date when all journal entries in the report were integrated
            with or extracted to the financial system.
          format: date-time
        PaymentStatusCode:
          type: string
          nullable: true
          description: The code for the payment status of the report.
        PaymentStatusName:
          type: string
          nullable: true
          description: The report's payment status, in the OAuth consumer's language.
        PersonalAmount:
          type: number
          nullable: true
          description: The total amount of expenses marked as personal. Maximum 23
            characters.
          format: double
        PolicyID:
          type: string
          nullable: true
          description: The unique identifier of the policy that applies to this report.
            Maximum 64 characters.
        ProcessingPaymentDate:
          type: string
          nullable: true
          description: The date that the report completed all approvals and was ready
            to be extracted for payment.
          format: date-time
        ReceiptsReceived:
          type: boolean
          description: 'If Y, then this report has its receipt receipt confirmed by
            the Expense Processor. Format: Y/N'
        SubmitDate:
          type: string
          nullable: true
          description: The date the report was submitted.
          format: date-time
        Total:
          type: number
          nullable: true
          description: The total amount of the report.
          format: double
        TotalApprovedAmount:
          type: number
          nullable: true
          description: The total amount of approved expenses in the report. Maximum
            23 characters.
          format: double
        TotalClaimedAmount:
          type: number
          nullable: true
          description: The total amount of all non-personal expenses in the report.
            Maximum 23 characters.
          format: double
        URI:
          type: string
          description: The URI to the resource.
        UserDefinedDate:
          type: string
          nullable: true
          description: The date of the report assigned by the user.
          format: date-time
        WorkflowActionUrl:
          type: string
          nullable: true
          description: The URL to post a workflow action to the report using the "Post
            Report Workflow Action" function.
    ReportPost:
      type: object
      properties:
        Comment:
          type: string
          description: 'The report header comment. Maximum length: 500.'
        Custom1:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom10:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom11:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom12:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom13:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom14:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom15:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom16:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom17:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom18:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom19:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom2:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom20:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom3:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom4:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom5:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom6:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom7:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom8:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom9:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Name:
          type: string
          description: The name of the report.
        OrgUnit1:
          type: string
          description: The details from the Org Unit fields. These may not have data,
            depending on configuration.
        OrgUnit2:
          type: string
          description: The details from the Org Unit fields. These may not have data,
            depending on configuration.
        OrgUnit3:
          type: string
          description: The details from the Org Unit fields. These may not have data,
            depending on configuration.
        OrgUnit4:
          type: string
          description: The details from the Org Unit fields. These may not have data,
            depending on configuration.
        OrgUnit5:
          type: string
          description: The details from the Org Unit fields. These may not have data,
            depending on configuration.
        OrgUnit6:
          type: string
          description: The details from the Org Unit fields. These may not have data,
            depending on configuration.
        PolicyID:
          type: string
          description: The unique identifier for the policy. This is the protected
            Policy Key
        Purpose:
          type: string
          description: 'The business purpose of the report. Maximum length: 500.'
        UserDefinedDate:
          type: string
          description: The date of the report assigned by the user.
          format: date-time
    ReportPut:
      type: object
      properties:
        Comment:
          type: string
          description: 'The report header comment. Maximum length: 500.'
        Custom1:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom10:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom11:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom12:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom13:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom14:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom15:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom16:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom17:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom18:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom19:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom2:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom20:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom3:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom4:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom5:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom6:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom7:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom8:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Custom9:
          type: string
          description: The details from the Custom fields. These may not have data,
            depending on configuration.
        Name:
          type: string
          description: The name of the report.
        OrgUnit1:
          type: string
          description: The details from the Org Unit fields. These may not have data,
            depending on configuration.
        OrgUnit2:
          type: string
          description: The details from the Org Unit fields. These may not have data,
            depending on configuration.
        OrgUnit3:
          type: string
          description: The details from the Org Unit fields. These may not have data,
            depending on configuration.
        OrgUnit4:
          type: string
          description: The details from the Org Unit fields. These may not have data,
            depending on configuration.
        OrgUnit5:
          type: string
          description: The details from the Org Unit fields. These may not have data,
            depending on configuration.
        OrgUnit6:
          type: string
          description: The details from the Org Unit fields. These may not have data,
            depending on configuration.
        PolicyID:
          type: string
          description: The unique identifier for the policy. This is the protected
            Policy Key
        Purpose:
          type: string
          description: 'The business purpose of the report. Maximum length: 500.'
        UserDefinedDate:
          type: string
          description: The date of the report assigned by the user.
          format: date-time
    ListItemGet:
      type: object
      properties:
        ID:
          type: string
          description: The unique identifier of the resource.
        Level10Code:
          type: string
          nullable: true
          description: The item code for the tenth level of the list. Empty when this
            level doesn't exist in the list. Maximum 32 characters
        Level1Code:
          type: string
          nullable: true
          description: The item code for the first level of the list. All lists have
            at least a Level1Code. Maximum 32 characters
        Level2Code:
          type: string
          nullable: true
          description: The item code for the second level of the list. Empty when
            this level doesn't exist in the list. Maximum 32 characters
        Level3Code:
          type: string
          nullable: true
          description: The item code for the third level of the list. Empty when this
            level doesn't exist in the list. Maximum 32 characters
        Level4Code:
          type: string
          nullable: true
          description: The item code for the fourth level of the list. Empty when
            this level doesn't exist in the list. Maximum 32 characters
        Level5Code:
          type: string
          nullable: true
          description: The item code for the fifth level of the list. Empty when this
            level doesn't exist in the list. Maximum 32 characters
        Level6Code:
          type: string
          nullable: true
          description: The item code for the sixth level of the list. Empty when this
            level doesn't exist in the list. Maximum 32 characters
        Level7Code:
          type: string
          nullable: true
          description: The item code for the seventh level of the list. Empty when
            this level doesn't exist in the list. Maximum 32 characters
        Level8Code:
          type: string
          nullable: true
          description: The item code for the eighth level of the list. Empty when
            this level doesn't exist in the list. Maximum 32 characters
        Level9Code:
          type: string
          nullable: true
          description: The item code for the ninth level of the list. Empty when this
            level doesn't exist in the list. Maximum 32 characters
        ListID:
          type: string
          description: The unique identifier for the list this item is a member of.
        Name:
          type: string
          nullable: true
          description: The name of item. Maximum 64 characters
        ParentID:
          type: string
          nullable: true
          description: The unique identifier of this item's parent. Empty when there
            is no parent.
        URI:
          type: string
          description: The URI to the resource.
    ListItemGetCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/ListItemGet'
        NextPage:
          type: string
          nullable: true
          description: The URI of the next page of results, if any.
    ListItemPost:
      type: object
      properties:
        Level10Code:
          type: string
          nullable: true
          description: The item code for the tenth level of the list. Empty when this
            level doesn't exist in the list. Maximum 32 characters
        Level1Code:
          type: string
          nullable: true
          description: The item code for the first level of the list. All lists have
            at least a Level1Code. Maximum 32 characters
        Level2Code:
          type: string
          nullable: true
          description: The item code for the second level of the list. Empty when
            this level doesn't exist in the list. Maximum 32 characters
        Level3Code:
          type: string
          nullable: true
          description: The item code for the third level of the list. Empty when this
            level doesn't exist in the list. Maximum 32 characters
        Level4Code:
          type: string
          nullable: true
          description: The item code for the fourth level of the list. Empty when
            this level doesn't exist in the list. Maximum 32 characters
        Level5Code:
          type: string
          nullable: true
          description: The item code for the fifth level of the list. Empty when this
            level doesn't exist in the list. Maximum 32 characters
        Level6Code:
          type: string
          nullable: true
          description: The item code for the sixth level of the list. Empty when this
            level doesn't exist in the list. Maximum 32 characters
        Level7Code:
          type: string
          nullable: true
          description: The item code for the seventh level of the list. Empty when
            this level doesn't exist in the list. Maximum 32 characters
        Level8Code:
          type: string
          nullable: true
          description: The item code for the eighth level of the list. Empty when
            this level doesn't exist in the list. Maximum 32 characters
        Level9Code:
          type: string
          nullable: true
          description: The item code for the ninth level of the list. Empty when this
            level doesn't exist in the list. Maximum 32 characters
        ListID:
          type: string
          description: The unique identifier for the list this item is a member of.
        Name:
          type: string
          nullable: true
          description: The name of item. Maximum 64 characters
    ListItemPut:
      type: object
      properties:
        Code:
          type: string
          nullable: true
          description: The item code of the list item. Maximum 32 characters
        ListID:
          type: string
          description: The unique identifier for the list this item is a member of.
        Name:
          type: string
          nullable: true
          description: The name of item. Maximum 64 characters
    ListGet:
      type: object
      properties:
        ConnectorID:
          type: string
          nullable: true
          description: Optional. Defines the encrypted ConnectorID. If not provided
            then the list isn't associated with a connector.
        DisplayCodeFirst:
          type: boolean
          description: Required. Defines whether CODE should appear before TEXT, or
            vice-versa.
        ExternalThreshold:
          type: integer
          nullable: true
          description: Optional. Default value is 1. Defines the threshold from where
            the level starts being external. This value can only be set if a ConnectorID
            is provided.
          format: int32
        ID:
          type: string
          description: The unique identifier of the resource.
        IsVendorList:
          type: boolean
          description: Required. Defines whether it is a vendor list.
        Name:
          type: string
          nullable: true
          description: Required. Defines a name for the list. This name must be unique.
        SearchCriteriaCode:
          type: string
          nullable: true
          description: Required. Defines whether the search criteria should apply
            to the CODE or to the TEXT.
        URI:
          type: string
          nullable: true
          description: The URI to the resource.
    ListGetCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/ListGet'
        NextPage:
          type: string
          nullable: true
          description: The URI of the next page of results, if any.
    ListPost:
      type: object
      properties:
        ConnectorID:
          type: string
          description: Optional. Defines the encrypted ConnectorID. If not provided
            then the list isn't associated with a connector.
        DisplayCodeFirst:
          type: boolean
          description: Required. Defines whether CODE should appear before TEXT, or
            vice-versa.
        ExternalThreshold:
          type: integer
          description: Optional. Default value is 1. Defines the threshold from where
            the level starts being external. This value can only be set if a ConnectorID
            is provided.
          format: int32
        IsVendorList:
          type: boolean
          description: Required. Defines whether it is a vendor list.
        Name:
          type: string
          description: Required. Defines a name for the list. This name must be unique.
        SearchCriteriaCode:
          type: string
          description: Required. Defines whether the search criteria should apply
            to the CODE or to the TEXT.
    User:
      type: object
      properties:
        Active:
          type: boolean
          description: Indicates whether the user is currently active or not.
        CellPhoneNumber:
          type: string
          nullable: true
          description: The cell phone number of the user.
        EmployeeID:
          type: string
          nullable: true         
          description: The employee ID of the user.
        FirstName:
          type: string
          nullable: true         
          description: The first name of the user.
        ID:
          type: string
          nullable: true         
          description: The unique identifier of the resource.
        LastName:
          type: string
          nullable: true         
          description: The last name of the user.
        LoginID:
          type: string
          nullable: true         
          description: The login ID of the user.
        MiddleName:
          type: string
          nullable: true         
          description: The middle name of the user.
        OrganizationUnit:
          type: string
          nullable: true         
          description: The organization unit of the user.
        PrimaryEmail:
          type: string
          nullable: true         
          description: The primary email of the user.
        URI:
          type: string
          nullable: true         
          description: The URI to the resource.
    UserCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/User'
        NextPage:
          type: string
          nullable: true
          description: The URI of the next page of results, if any.
  securitySchemes:
    OAuth2:
      type: oauth2
      description: To use this API, you need to get OAuth client credentials (client
        ID, secret, and geolocation) from SAP Concur, and be authorized to use the
        relevant scope. Refer to the <a href="https://developer.concur.com/api-reference/authentication/getting-started.html">full
        authentication information</a> for more information.
      flows:
        clientCredentials:
          tokenUrl: https://us.api.concursolutions.com/oauth2/v0
          scopes: {}
x-sap-shortText: Retreives basic company information with a list of users.
x-servers:
- url: https://www.concursolutions.com/api/v3.0
  description: SAP Concur API EndPoint
