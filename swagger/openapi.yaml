openapi: 3.0.1
info:
  title: Users
  description: Provides details of all the client's SAP Concur users that meet the
    search parameters.
  version: "3.0"
servers:
- url: https://www.concursolutions.com/api/v3.0
security:
- OAuth2: []
tags:
- name: Resources
paths:
  /common/listitems:
    get:
      tags:
      - Resources
      summary: Get all list items
      description: Returns all list items based on the search criteria.
      parameters:
      - name: limit
        in: query
        description: The number of records to return. The default is 25 and the maximum
          is 100.
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: The start of the page offset. The default is from the beginning.
        schema:
          type: string
      - name: listId
        in: query
        description: The unique identifier for the list this item is a member of.
        schema:
          type: string
      - name: name
        in: query
        description: 'The name of the list item. Maximum length: 64.'
        schema:
          type: string
      - name: parentId
        in: query
        description: The unique identifier of this item's parent. Empty when there
          is no parent.
        schema:
          type: string
      - name: level1Code
        in: query
        description: The item code for the first level of the list. All lists have
          at least a Level1Code. Maximum 32 characters
        schema:
          type: string
      - name: level2Code
        in: query
        description: The item code for the second level of the list. Empty when this
          level doesn't exist in the list. Maximum 32 characters
        schema:
          type: string
      - name: level3Code
        in: query
        description: The item code for the third level of the list. Empty when this
          level doesn't exist in the list. Maximum 32 characters
        schema:
          type: string
      - name: level4Code
        in: query
        description: The item code for the fourth level of the list. Empty when this
          level doesn't exist in the list. Maximum 32 characters
        schema:
          type: string
      - name: level5Code
        in: query
        description: The item code for the fifth level of the list. Empty when this
          level doesn't exist in the list. Maximum 32 characters
        schema:
          type: string
      - name: level6Code
        in: query
        description: The item code for the sixth level of the list. Empty when this
          level doesn't exist in the list. Maximum 32 characters
        schema:
          type: string
      - name: level7Code
        in: query
        description: The item code for the seventh level of the list. Empty when this
          level doesn't exist in the list. Maximum 32 characters
        schema:
          type: string
      - name: level8Code
        in: query
        description: The item code for the eighth level of the list. Empty when this
          level doesn't exist in the list. Maximum 32 characters
        schema:
          type: string
      - name: level9Code
        in: query
        description: The item code for the ninth level of the list. Empty when this
          level doesn't exist in the list. Maximum 32 characters
        schema:
          type: string
      - name: level10Code
        in: query
        description: The item code for the tenth level of the list. Empty when this
          level doesn't exist in the list. Maximum 32 characters
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListItemGetCollection'
            application/xml:
              schema:
                $ref: '#/components/schemas/ListItemGetCollection'
    post:
      tags:
      - Resources
      summary: Create a new list item
      description: Creates a new item in the specified list.
      requestBody:
        description: List item object to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListItemPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/ListItemPost'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CreateResponse'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
            application/xml:
              schema:
                $ref: '#/components/schemas/Void'
      x-codegen-request-body-name: content
  /common/listitems/{id}:
    get:
      tags:
      - Resources
      summary: Get a single list item by ID
      description: Returns the specified list item.
      parameters:
      - name: id
        in: path
        description: The unique identifier for the list item.
        required: true
        schema:
          type: string
      - name: listId
        in: query
        description: The unique identifier for the list this item is a member.
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListItemGet'
            application/xml:
              schema:
                $ref: '#/components/schemas/ListItemGet'
    put:
      tags:
      - Resources
      summary: Update list item
      description: Updates the specified list item. Only the provided fields will
        be updated, missing fields will not be altered.
      parameters:
      - name: id
        in: path
        description: The unique identifier for the list item.
        required: true
        schema:
          type: string
      requestBody:
        description: The list item object to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListItemPut'
          application/xml:
            schema:
              $ref: '#/components/schemas/ListItemPut'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
            application/xml:
              schema:
                $ref: '#/components/schemas/Void'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
            application/xml:
              schema:
                $ref: '#/components/schemas/Void'
      x-codegen-request-body-name: content
    delete:
      tags:
      - Resources
      summary: Delete list item by ID
      description: Deletes the specified list item.
      parameters:
      - name: id
        in: path
        description: The unique identifier of the list item to delete
        required: true
        schema:
          type: string
      - name: listId
        in: query
        description: The unique identifier of the list associated with a list item
          to be deleted
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
            application/xml:
              schema:
                $ref: '#/components/schemas/Void'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Void'
            application/xml:
              schema:
                $ref: '#/components/schemas/Void'
  /common/lists:
    get:
      tags:
      - Resources
      summary: Gets all lists
      description: Returns all lists based on the search criteria.
      parameters:
      - name: limit
        in: query
        description: The number of records to return. The default is 25 and the maximum
          is 100.
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: The start of the page offset. The default is from the beginning.
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGetCollection'
            application/xml:
              schema:
                $ref: '#/components/schemas/ListGetCollection'
    post:
      tags:
      - Resources
      summary: Create a new list
      description: Create a new list
      requestBody:
        description: list object to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPost'
          application/xml:
            schema:
              $ref: '#/components/schemas/ListPost'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CreateResponse'
      x-codegen-request-body-name: content
  /common/lists/{id}:
    get:
      tags:
      - Resources
      summary: Get a single list by ID
      description: Returns a list by ID.
      parameters:
      - name: id
        in: path
        description: The unique identifier for the list.
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListGet'
            application/xml:
              schema:
                $ref: '#/components/schemas/ListGet'
  /common/users:
    get:
      tags:
      - Resources
      summary: Get all users.
      description: Retrieves all users based on the search criteria.
      parameters:
      - name: offset
        in: query
        description: The starting point of the next set of results, after the limit
          specified in the limit field has been reached.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: 'The number of records to return. Default value: 25. Maximum:
          100.'
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      - name: primaryEmail
        in: query
        description: The primary email of the user.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: employeeID
        in: query
        description: The employee ID of the user.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: user
        in: query
        description: The login ID of the user.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: lastName
        in: query
        description: The last name of the user.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: active
        in: query
        description: 'Indicates whether to return active or inactive users. FORMAT:
          true or false'
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCollection'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserCollection'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Unauthorized'
components:
  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: string
  schemas:
    CreateResponse:
      type: object
      properties:
        ID:
          type: string
        URI:
          type: string
    Void:
      type: object
    ListItemGet:
      type: object
      properties:
        ID:
          type: string
          description: The unique identifier of the resource.
        Level10Code:
          type: string
          nullable: true
          description: The item code for the tenth level of the list. Empty when this
            level doesn't exist in the list. Maximum 32 characters
        Level1Code:
          type: string
          nullable: true
          description: The item code for the first level of the list. All lists have
            at least a Level1Code. Maximum 32 characters
        Level2Code:
          type: string
          nullable: true
          description: The item code for the second level of the list. Empty when
            this level doesn't exist in the list. Maximum 32 characters
        Level3Code:
          type: string
          nullable: true
          description: The item code for the third level of the list. Empty when this
            level doesn't exist in the list. Maximum 32 characters
        Level4Code:
          type: string
          nullable: true
          description: The item code for the fourth level of the list. Empty when
            this level doesn't exist in the list. Maximum 32 characters
        Level5Code:
          type: string
          nullable: true
          description: The item code for the fifth level of the list. Empty when this
            level doesn't exist in the list. Maximum 32 characters
        Level6Code:
          type: string
          nullable: true
          description: The item code for the sixth level of the list. Empty when this
            level doesn't exist in the list. Maximum 32 characters
        Level7Code:
          type: string
          nullable: true
          description: The item code for the seventh level of the list. Empty when
            this level doesn't exist in the list. Maximum 32 characters
        Level8Code:
          type: string
          nullable: true
          description: The item code for the eighth level of the list. Empty when
            this level doesn't exist in the list. Maximum 32 characters
        Level9Code:
          type: string
          nullable: true
          description: The item code for the ninth level of the list. Empty when this
            level doesn't exist in the list. Maximum 32 characters
        ListID:
          type: string
          description: The unique identifier for the list this item is a member of.
        Name:
          type: string
          nullable: true
          description: The name of item. Maximum 64 characters
        ParentID:
          type: string
          nullable: true
          description: The unique identifier of this item's parent. Empty when there
            is no parent.
        URI:
          type: string
          description: The URI to the resource.
    ListItemGetCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/ListItemGet'
        NextPage:
          type: string
          nullable: true
          description: The URI of the next page of results, if any.
    ListItemPost:
      type: object
      properties:
        Level10Code:
          type: string
          nullable: true
          description: The item code for the tenth level of the list. Empty when this
            level doesn't exist in the list. Maximum 32 characters
        Level1Code:
          type: string
          nullable: true
          description: The item code for the first level of the list. All lists have
            at least a Level1Code. Maximum 32 characters
        Level2Code:
          type: string
          nullable: true
          description: The item code for the second level of the list. Empty when
            this level doesn't exist in the list. Maximum 32 characters
        Level3Code:
          type: string
          nullable: true
          description: The item code for the third level of the list. Empty when this
            level doesn't exist in the list. Maximum 32 characters
        Level4Code:
          type: string
          nullable: true
          description: The item code for the fourth level of the list. Empty when
            this level doesn't exist in the list. Maximum 32 characters
        Level5Code:
          type: string
          nullable: true
          description: The item code for the fifth level of the list. Empty when this
            level doesn't exist in the list. Maximum 32 characters
        Level6Code:
          type: string
          nullable: true
          description: The item code for the sixth level of the list. Empty when this
            level doesn't exist in the list. Maximum 32 characters
        Level7Code:
          type: string
          nullable: true
          description: The item code for the seventh level of the list. Empty when
            this level doesn't exist in the list. Maximum 32 characters
        Level8Code:
          type: string
          nullable: true
          description: The item code for the eighth level of the list. Empty when
            this level doesn't exist in the list. Maximum 32 characters
        Level9Code:
          type: string
          nullable: true
          description: The item code for the ninth level of the list. Empty when this
            level doesn't exist in the list. Maximum 32 characters
        ListID:
          type: string
          description: The unique identifier for the list this item is a member of.
        Name:
          type: string
          nullable: true
          description: The name of item. Maximum 64 characters
    ListItemPut:
      type: object
      properties:
        Code:
          type: string
          nullable: true
          description: The item code of the list item. Maximum 32 characters
        ListID:
          type: string
          description: The unique identifier for the list this item is a member of.
        Name:
          type: string
          nullable: true
          description: The name of item. Maximum 64 characters
    ListGet:
      type: object
      properties:
        ConnectorID:
          type: string
          nullable: true
          description: Optional. Defines the encrypted ConnectorID. If not provided
            then the list isn't associated with a connector.
        DisplayCodeFirst:
          type: boolean
          description: Required. Defines whether CODE should appear before TEXT, or
            vice-versa.
        ExternalThreshold:
          type: integer
          nullable: true
          description: Optional. Default value is 1. Defines the threshold from where
            the level starts being external. This value can only be set if a ConnectorID
            is provided.
          format: int32
        ID:
          type: string
          description: The unique identifier of the resource.
        IsVendorList:
          type: boolean
          description: Required. Defines whether it is a vendor list.
        Name:
          type: string
          nullable: true
          description: Required. Defines a name for the list. This name must be unique.
        SearchCriteriaCode:
          type: string
          nullable: true
          description: Required. Defines whether the search criteria should apply
            to the CODE or to the TEXT.
        URI:
          type: string
          nullable: true
          description: The URI to the resource.
    ListGetCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/ListGet'
        NextPage:
          type: string
          nullable: true
          description: The URI of the next page of results, if any.
    ListPost:
      type: object
      properties:
        ConnectorID:
          type: string
          description: Optional. Defines the encrypted ConnectorID. If not provided
            then the list isn't associated with a connector.
        DisplayCodeFirst:
          type: boolean
          description: Required. Defines whether CODE should appear before TEXT, or
            vice-versa.
        ExternalThreshold:
          type: integer
          description: Optional. Default value is 1. Defines the threshold from where
            the level starts being external. This value can only be set if a ConnectorID
            is provided.
          format: int32
        IsVendorList:
          type: boolean
          description: Required. Defines whether it is a vendor list.
        Name:
          type: string
          description: Required. Defines a name for the list. This name must be unique.
        SearchCriteriaCode:
          type: string
          description: Required. Defines whether the search criteria should apply
            to the CODE or to the TEXT.
    User:
      type: object
      properties:
        Active:
          type: boolean
          description: Indicates whether the user is currently active or not.
        CellPhoneNumber:
          type: string
          nullable: true
          description: The cell phone number of the user.
        EmployeeID:
          type: string
          nullable: true         
          description: The employee ID of the user.
        FirstName:
          type: string
          nullable: true         
          description: The first name of the user.
        ID:
          type: string
          nullable: true         
          description: The unique identifier of the resource.
        LastName:
          type: string
          nullable: true         
          description: The last name of the user.
        LoginID:
          type: string
          nullable: true         
          description: The login ID of the user.
        MiddleName:
          type: string
          nullable: true         
          description: The middle name of the user.
        OrganizationUnit:
          type: string
          nullable: true         
          description: The organization unit of the user.
        PrimaryEmail:
          type: string
          nullable: true         
          description: The primary email of the user.
        URI:
          type: string
          nullable: true         
          description: The URI to the resource.
    UserCollection:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/User'
        NextPage:
          type: string
          nullable: true
          description: The URI of the next page of results, if any.
  securitySchemes:
    OAuth2:
      type: oauth2
      description: To use this API, you need to get OAuth client credentials (client
        ID, secret, and geolocation) from SAP Concur, and be authorized to use the
        relevant scope. Refer to the <a href="https://developer.concur.com/api-reference/authentication/getting-started.html">full
        authentication information</a> for more information.
      flows:
        clientCredentials:
          tokenUrl: https://us.api.concursolutions.com/oauth2/v0
          scopes: {}
x-sap-shortText: Retreives basic company information with a list of users.
x-servers:
- url: https://www.concursolutions.com/api/v3.0
  description: SAP Concur API EndPoint
